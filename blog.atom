<?xml version="1.0" encoding="UTF-8"?> <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"> <channel> <title></title> <description>Debezium is an open source distributed platform for change data capture. Start it up, point it at your databases, and your apps can start responding to all of the inserts, updates, and deletes that other apps commit to your databases. Debezium is durable and fast, so your apps can respond quickly and never miss an event, even when things go wrong.</description> <sy:updatePeriod>daily</sy:updatePeriod> <sy:updateFrequency>1</sy:updateFrequency> <link>https://debezium.io</link> <atom:link href="https://debezium.io/blog.atom" rel="self" type="application/rss+xml"/> <lastBuildDate>Fri, 04 Aug 2023 00:00:00 +0000</lastBuildDate> <item> <title>Debezium 2.3.2.Final Released</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;It is my pleasure to announce the immediate release of Debezium &lt;strong&gt;2.3.2.Final&lt;/strong&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This release includes several bug fixes to address regressions, stability, documentation updates. If you are currently looking to upgrade to the Debezium 2.3.x release stream, we highly recommend you consider using this release. Let&amp;#8217;s take a quick look into the regressions and bug fixes.&lt;/p&gt; &lt;/div&gt;</description> <pubDate>Fri, 04 Aug 2023 00:00:00 +0000</pubDate> <link>https://debezium.io/blog/2023/08/04/debezium-2-3-2-final-released/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/08/04/debezium-2-3-2-final-released/</guid> </item> <item> <title>Debezium 2.3.1.Final Released</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;It has been several weeks since we released the first installment of Debezium 2.3, and I&amp;#8217;m excited to announce the next iteration of Debezium 2.3 with &lt;strong&gt;2.3.1.Final&lt;/strong&gt;. As with any micro-release, the focus is on stability and bug fixes, as well as adjustments to our documentation; however there are some changes that are noteworthy that I would like to take a few moments to highlight.&lt;/p&gt; &lt;/div&gt;</description> <pubDate>Thu, 27 Jul 2023 00:00:00 +0000</pubDate> <link>https://debezium.io/blog/2023/07/27/debezium-2-3-1-final-released/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/07/27/debezium-2-3-1-final-released/</guid> </item> <item> <title>Debezium 2.4.0.Alpha1 Released</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;It&amp;#8217;s been a busy month in Debezium-land, and it&amp;#8217;s my pleasure to announce the first release of Debezium 2.4 series, &lt;strong&gt;2.4.0.Alpha1&lt;/strong&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This release includes a plethora of changes, &lt;a href=&quot;https://issues.redhat.com/issues/?jql=project%20%3D%20DBZ%20AND%20fixVersion%20%3D%202.4.0.Alpha1&quot;&gt;59 changes&lt;/a&gt; to be exact, that cover a wide range of resolved issues, improvement to stability, new features, and several breaking changes. Let&amp;#8217;s dive into each of these and discuss them in more depth.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;&lt;!- more --&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#breaking-changes&quot;&gt;Breaking changes&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#new-features&quot;&gt;New features&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#other-changes&quot;&gt;Other changes&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;breaking-changes&quot;&gt;Breaking changes&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;sect3&quot;&gt; &lt;h4 id=&quot;mongodb&quot;&gt;MongoDB&lt;/h4&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The MongoDB connector explicitly preferred to use the secondary under specific scenarios previously. This explicit usage created problems for users who wanted to connect to the primary node. Thanks to recent changes (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6521&quot;&gt;DBZ-6521&lt;/a&gt;), this is no longer the case and the connection string setting is used instead.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect3&quot;&gt; &lt;h4 id=&quot;vitess&quot;&gt;Vitess&lt;/h4&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The Vitess connector&amp;#8217;s change event structure has been slightly adjusted thanks to changes (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6617&quot;&gt;DBZ-6617&lt;/a&gt;). The change event&amp;#8217;s &lt;code&gt;source&lt;/code&gt; information block now includes a new field that identifies the shard the event originated from.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;new-features&quot;&gt;New Features&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;sect3&quot;&gt; &lt;h4 id=&quot;offset_editor_example&quot;&gt;Offset editor example&lt;/h4&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Users often express the need to manipulate connector offsets for various reasons. This can often be very difficult for those who may not be familiar with Kafka&amp;#8217;s CLI tools or Java if you use Debezium Server. Thanks to a contribution (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6338&quot;&gt;DBZ-6338&lt;/a&gt;) by Nathan Smit, you can now use an editor to manipulate the offsets from the command line or a web-based interface.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Head to our &lt;a href=&quot;https://github.com/debezium/debezium-examples/tree/main/offset-editor&quot;&gt;examples repository&lt;/a&gt; and follow the &lt;code&gt;README.md&lt;/code&gt; to get started.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect3&quot;&gt; &lt;h4 id=&quot;error_handling&quot;&gt;Error handling&lt;/h4&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Some Debezium connectors previously used a connector property, &lt;code&gt;errors.max.retries&lt;/code&gt;. This property controlled how often a Debezium connector failure exception would be explicitly wrapped in a &lt;code&gt;RetriableException&lt;/code&gt; but the connector threw the raw exception up to the runtime. While this may sound similar to Kafka Connect&amp;#8217;s &lt;code&gt;errors.retry.timeout&lt;/code&gt;, this effectively gave users a common way to deal with retries across multiple Debezium runtimes, including Kafka Connect, Debezium Server, and Debezium Embedded.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;With this release, &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6573&quot;&gt;DBZ-6573&lt;/a&gt; unifies this behavior making it available to all connectors.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect3&quot;&gt; &lt;h4 id=&quot;notify_initial_snapshot_progress&quot;&gt;Notify initial snapshot progress&lt;/h4&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium&amp;#8217;s new notification subsystem provides an easy way to integrate third-party tools and applications with Debezium to gain insight into the ongoing change data capture process, above and beyond the traditional JMX approach. In 2.4, the notification subsystem now includes the ability to notify you about the status of the ongoing initial snapshot (&lt;a href=&quot;https://issues.redhat.com/browse?DBZ-6416&quot;&gt;DBZ-6416&lt;/a&gt;).&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Initial snapshot notifications are emitted with an &lt;code&gt;aggregatetType&lt;/code&gt; of &lt;code&gt;Initial Snapshot&lt;/code&gt; and contain a &lt;code&gt;type&lt;/code&gt; field that exposes the current status of the snapshot. The possible values include: &lt;code&gt;STARTED&lt;/code&gt;, &lt;code&gt;ABORTED&lt;/code&gt;, &lt;code&gt;PAUSED&lt;/code&gt;, &lt;code&gt;RESUMED&lt;/code&gt;, &lt;code&gt;IN_PROGRESS&lt;/code&gt;, &lt;code&gt;TABLE_SCAN_COMPLETED&lt;/code&gt;, and &lt;code&gt;COMPLETED&lt;/code&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect3&quot;&gt; &lt;h4 id=&quot;mysql_improvements&quot;&gt;MySQL improvements&lt;/h4&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Thanks to a contribution provided by Harvey Yue (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6472&quot;&gt;DBZ-6472&lt;/a&gt;), the MySQL connector will use parallelization to generate schema events during its snapshot phase. This should improve the overall performance when capturing the schema for many tables in your database. We plan to investigate how this can be extended to other relational connectors.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect3&quot;&gt; &lt;h4 id=&quot;mongodb_improvements&quot;&gt;MongoDB improvements&lt;/h4&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The MongoDB connector continues to see lots of active development. This release introduces several new features specifically for MongoDB, which include:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Cluster-wide privileges are no longer necessary when watching a single database or collection (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6182&quot;&gt;DBZ-6182&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Read preference taken from connection string (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6468&quot;&gt;DBZ-6468&lt;/a&gt;, &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6578&quot;&gt;DBZ-6578&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Support authentication with TC MongoDB deployments (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6596&quot;&gt;DBZ-6596&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;As we continue to make further improvements to the MongoDB connector, please let us know if there are still rough edges or enhancements that will help streamline its usage.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect3&quot;&gt; &lt;h4 id=&quot;oracle_improvements&quot;&gt;Oracle improvements&lt;/h4&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium 2.4 supports several new Oracle data types, which include &lt;code&gt;XML_TYPE&lt;/code&gt; and &lt;code&gt;RAW&lt;/code&gt; (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-3605&quot;&gt;DBZ-3605&lt;/a&gt;). Two new Oracle dependencies were necessary to support XML: &lt;code&gt;xdb&lt;/code&gt; and &lt;code&gt;xmlparserv2&lt;/code&gt;. These dependencies are not redistributable, so they&amp;#8217;re not included in the connector plugin archive by default, much like the connector&amp;#8217;s driver. You must obtain these directly from Maven Central or oracle, just like the driver dependency.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In addition, XML works similarly to &lt;code&gt;CLOB&lt;/code&gt; and &lt;code&gt;BLOB&lt;/code&gt; data types; therefore, the connector must be configured with &lt;code&gt;lob.enabled&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; to ingest XML changes. We&amp;#8217;d love to hear your feedback on this new feature as it&amp;#8217;s been requested for quite some time.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect3&quot;&gt; &lt;h4 id=&quot;jdbc_sink_improvements&quot;&gt;JDBC sink improvements&lt;/h4&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Thanks to a contribution from Nicholas Fwang (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6595&quot;&gt;DBZ-6595&lt;/a&gt;), the JDBC sink connector can now reference values from the change event&amp;#8217;s &lt;code&gt;source&lt;/code&gt; information block as a part of the connector&amp;#8217;s configuration property &lt;code&gt;table.name.format&lt;/code&gt;. If you want to reference such fields, simply use &lt;code&gt;${source.&amp;lt;field-name&amp;gt;}&lt;/code&gt; in the configuration, and the field&amp;#8217;s value will be used.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In addition, Roman Kudryashov also contributed the ability to resolve a row&amp;#8217;s primary key from a header defined on the change event (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6602&quot;&gt;DBZ-6602&lt;/a&gt;). To use this new feature, specify the connector configuration property &lt;code&gt;primary.key.mode&lt;/code&gt; as &lt;code&gt;record_header&lt;/code&gt;. If the header value is a primitive type, you will need to define a &lt;code&gt;primary.key.fields&lt;/code&gt; configuration similar to how you would if the event&amp;#8217;s record key was a primitive. If the header value is a &lt;code&gt;struct&lt;/code&gt; type, all fields of the structure will be used by default, but specifying the &lt;code&gt;primary.key.fields&lt;/code&gt; property allows you to choose a subset of fields from the header as the key.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect3&quot;&gt; &lt;h4 id=&quot;spanner_improvements&quot;&gt;Spanner improvements&lt;/h4&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;It was possible due to certain conditions that a Spanner connector may not advance from the &lt;code&gt;START_INITIAL_SYNC&lt;/code&gt; state during initialization. After investigation by Nancy Xu, a new configuration option was introduced to supply a configurable timeout. This can be done by adding the following to the connector&amp;#8217;s configuration:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;properties&quot;&gt;connector.spanner.task.await.initialization.timeout=&amp;lt;timeout in milliseconds&amp;gt;&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect3&quot;&gt; &lt;h4 id=&quot;debezium_ui_metrics&quot;&gt;Debezium UI metrics&lt;/h4&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The Debezium UI project allows you to easily deploy any Debezium connector onto Kafka Connect using a web-based interface. This release has improved the interface by including several connector metrics (&lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5321&quot;&gt;DBZ-5321&lt;/a&gt;) on the main connector listing view. We&amp;#8217;d love your feedback on this change and welcome any suggestions on other metrics you may find useful.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;other-changes&quot;&gt;Other fixes&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In addition, there were quite a number of stability and bug fixes that made it into this release. These include the following:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Mysql connector fails to parse statement FLUSH FIREWALL_RULES &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-3925&quot;&gt;DBZ-3925&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Add the API endpoint to expose running connector metrics &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5359&quot;&gt;DBZ-5359&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Display critical connector metrics &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5360&quot;&gt;DBZ-5360&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Snapshot result not saved if LAST record is filtered out &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5464&quot;&gt;DBZ-5464&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Define and document schema history topic messages schema &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5518&quot;&gt;DBZ-5518&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Align query.fetch.size across connectors &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5676&quot;&gt;DBZ-5676&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Upgrade to Apache Kafka 3.5.0 &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6047&quot;&gt;DBZ-6047&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Remove downstream related code from UI Frontend code &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6394&quot;&gt;DBZ-6394&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Make Signal actions extensible &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6417&quot;&gt;DBZ-6417&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;CloudEventsConverter throws static error on Kafka Connect 3.5+ &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6517&quot;&gt;DBZ-6517&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Dependency io.debezium:debezium-testing-testcontainers affects logback in tests &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6525&quot;&gt;DBZ-6525&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Cleanup duplicate jobs from jenkins &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6535&quot;&gt;DBZ-6535&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Implement sharded MongoDB ocp deployment and integration tests &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6538&quot;&gt;DBZ-6538&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Batches with DELETE statement first will skip everything else &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6576&quot;&gt;DBZ-6576&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Oracle unsupported DDL statement - drop multiple partitions &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6585&quot;&gt;DBZ-6585&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Only Struct objects supported for [Header field insertion], found: null &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6588&quot;&gt;DBZ-6588&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Support PostgreSQL coercion for UUID, JSON, and JSONB data types &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6589&quot;&gt;DBZ-6589&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;MySQL parser cannot parse CAST AS dec &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6590&quot;&gt;DBZ-6590&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Refactor retry handling in Redis schema history &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6594&quot;&gt;DBZ-6594&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Excessive Log Message 'Marking Processed Record for Topic' &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6597&quot;&gt;DBZ-6597&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Support for custom tags in the connector metrics &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6603&quot;&gt;DBZ-6603&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Fixed DataCollections for table scan completion notification &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6605&quot;&gt;DBZ-6605&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Oracle connector is not recoverable if ORA-01327 is wrapped by another JDBC or Oracle exception &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6610&quot;&gt;DBZ-6610&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Fatal error when parsing Mysql (Percona 5.7.39-42) procedure &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6613&quot;&gt;DBZ-6613&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Build of Potgres connector fails when building against Kafka 2.X &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6614&quot;&gt;DBZ-6614&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Upgrade postgresql driver to v42.6.0 &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6619&quot;&gt;DBZ-6619&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;MySQL ALTER USER with RETAIN CURRENT PASSWORD fails with parsing exception &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6622&quot;&gt;DBZ-6622&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Upgrade Quarkus to 3.2.0.Final &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6626&quot;&gt;DBZ-6626&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Inaccurate documentation regarding additional-condition &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6628&quot;&gt;DBZ-6628&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Oracle connection SQLRecoverableExceptions are not retried by default &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6633&quot;&gt;DBZ-6633&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Upgrade kcctl to 1.0.0.Beta3 &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6642&quot;&gt;DBZ-6642&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Cannot delete non-null interval value &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6648&quot;&gt;DBZ-6648&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Upgrade gRPC to 1.56.1 &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6649&quot;&gt;DBZ-6649&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;ConcurrentModificationException thrown in Debezium 2.3 &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6650&quot;&gt;DBZ-6650&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Dbz crashes on parsing Mysql Procedure Code (Statement Labels) &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6651&quot;&gt;DBZ-6651&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;CloudEvents converter is broken for JSON message deserialization &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6654&quot;&gt;DBZ-6654&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Vitess: Connector fails if table name is a mysql reserved word &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6656&quot;&gt;DBZ-6656&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Junit conflicts cause by test-containers module using transitive Junit5 from quarkus &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6659&quot;&gt;DBZ-6659&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Disable Kafka 2.x CRON trigger &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6667&quot;&gt;DBZ-6667&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Altogether, &lt;a href=&quot;https://issues.redhat.com/issues/?jql=project%20%3D%20DBZ%20AND%20fixVersion%20%3D%202.4.0.Alpha1%20ORDER%20BY%20component%20ASC&quot;&gt;59 issues&lt;/a&gt; were fixed for this release. A big thank you to all the contributors from the community who worked on this release: &lt;a href=&quot;https://github.com/adamstrickland&quot;&gt;Adam Strickland&lt;/a&gt;, &lt;a href=&quot;https://github.com/aozmen121&quot;&gt;Alisa Houskova&lt;/a&gt;, &lt;a href=&quot;https://github.com/AnatolyPopov&quot;&gt;Anatolii Popov&lt;/a&gt;, &lt;a href=&quot;https://github.com/ani-sha&quot;&gt;Anisha Mohanty&lt;/a&gt;, &lt;a href=&quot;https://github.com/maxant&quot;&gt;Ant Kutschera&lt;/a&gt;, &lt;a href=&quot;https://github.com/Artgyk&quot;&gt;Artur Gukasian&lt;/a&gt;, &lt;a href=&quot;https://github.com/bdbene&quot;&gt;Balint Bene&lt;/a&gt;, &lt;a href=&quot;https://github.com/roldanbob&quot;&gt;Bob Roldan&lt;/a&gt;, &lt;a href=&quot;https://github.com/Naros&quot;&gt;Chris Cranford&lt;/a&gt;, &lt;a href=&quot;https://github.com/harveyyue&quot;&gt;Harvey Yue&lt;/a&gt;, &lt;a href=&quot;https://github.com/blcksrx&quot;&gt;Hossein Torabi&lt;/a&gt;, &lt;a href=&quot;https://github.com/indraraj&quot;&gt;Indra Shukla&lt;/a&gt;, &lt;a href=&quot;https://github.com/nicholas-fwang&quot;&gt;Inki Hwang&lt;/a&gt;, &lt;a href=&quot;https://github.com/jcechace&quot;&gt;Jakub Cechacek&lt;/a&gt;, &lt;a href=&quot;https://github.com/jpechane&quot;&gt;Jiri Pechanec&lt;/a&gt;, &lt;a href=&quot;https://github.com/mfvitale&quot;&gt;Mario Fiore Vitale&lt;/a&gt;, &lt;a href=&quot;https://github.com/MartinMedek&quot;&gt;Martin Medek&lt;/a&gt;, &lt;a href=&quot;https://github.com/nancyxu123&quot;&gt;Nancy Xu&lt;/a&gt;, &lt;a href=&quot;https://github.com/obabec&quot;&gt;Ondrej Babec&lt;/a&gt;, &lt;a href=&quot;https://github.com/rk3rn3r&quot;&gt;René Kerner&lt;/a&gt;, &lt;a href=&quot;https://github.com/jaegwonseo&quot;&gt;Seo Jae-kwon&lt;/a&gt;, &lt;a href=&quot;https://github.com/smiklosovic&quot;&gt;Stefan Miklosovic&lt;/a&gt;, &lt;a href=&quot;https://github.com/twthorn&quot;&gt;Thomas Thornton&lt;/a&gt;, and &lt;a href=&quot;https://github.com/vjuranek&quot;&gt;Vojtech Juranek&lt;/a&gt;!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;whats_next&quot;&gt;What&amp;#8217;s next?&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This initial release of Debezium 2.4 is already packed with lots of new features and the team is only getting started. Looking at our &lt;a href=&quot;https://debezium.io/roadmap&quot;&gt;road map&lt;/a&gt;, we&amp;#8217;ve already tackled nearly half of our plans for 2.4, but much still remains including:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Single message transforms for TimescaleDB and Timestamps&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;OpenLogReplicator ingestion for Oracle&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Ad-hoc blocking snapshots&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Parallelization of Debezium Embedded&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Parallel incremental snapshots for MongoDB&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Further improvements to Debezium UI&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;We intend to stick to our approximate two week cadence, so expect Alpha2 at the start of August. Until then, please be sure to get in touch with us on the &lt;a href=&quot;https://groups.google.com/g/debezium&quot;&gt;mailing list&lt;/a&gt; or our &lt;a href=&quot;https://debezium.zulipchat.com/login/#narrow/stream/302529-users&quot;&gt;chat&lt;/a&gt; if you have any ideas or suggestions.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;</description> <pubDate>Mon, 17 Jul 2023 00:00:00 +0000</pubDate> <link>https://debezium.io/blog/2023/07/17/debezium-2-4-alpha1-released/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/07/17/debezium-2-4-alpha1-released/</guid> </item> <item> <title>Debezium signaling and notifications - Part 2: Customisation</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Welcome to this series of articles dedicated to signaling and notifications in Debezium! This post serves as the second installment in the series, where we will discuss how to customize the signal and notification channels in Debezium.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium 2.3 introduced new improvements in signaling and notification capabilities. You can set up new signals and notification channels in addition to the pre-defined signals and notification channels offered by Debezium. This feature enables users to customize the system to suit their unique needs and combine it with their existing infrastructure or third-party solutions. It enables effective monitoring and a proactive response to data changes by precisely capturing and communicating signal events and triggering notifications through preferred channels.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The first article in this series, &lt;a href=&quot;https://debezium.io/blog/2023/06/27/Debezium-signaling-and-notifications/&quot;&gt;Signaling and Notifications in Debezium&lt;/a&gt;, provides an overview of the signaling and notification features in Debezium. It also discusses the available channels &amp;amp; their use cases for various scenarios.&lt;/p&gt; &lt;/div&gt;</description> <pubDate>Mon, 10 Jul 2023 00:00:00 +0000</pubDate> <link>https://debezium.io/blog/2023/07/10/custom-http-signaling-notification/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/07/10/custom-http-signaling-notification/</guid> </item> <item> <title>Debezium for Oracle - Part 3: Performance and Debugging</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This post is the final part of a 3-part series to explore using Debezium to ingest changes from an Oracle database using Oracle LogMiner. In case you missed it, the first installment of this series is found &lt;a href=&quot;/blog/2022/09/30/debezium-oracle-series-part-1/&quot;&gt;here&lt;/a&gt; and the second installment is found &lt;a href=&quot;/blog/2022/10/06/debezium-oracle-series-part-2&quot;&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In this third and final installment, we are going to build on what we have done in the previous two posts, focusing on the following areas:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#performance&quot;&gt;Performance optimizations&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#debugging&quot;&gt;How to debug and assess problems and how to resolve them&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt;</description> <pubDate>Thu, 29 Jun 2023 12:00:00 +0000</pubDate> <link>https://debezium.io/blog/2023/06/29/debezium-oracle-series-part-3/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/06/29/debezium-oracle-series-part-3/</guid> </item> <item> <title>Debezium signaling and notifications - Part 1</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Welcome to this series of articles dedicated to signaling and notifications in Debezium! This post serves as the first installment in the series, where we will introduce the signaling and notification features offered by Debezium and discuss the available channels for interacting with the platform.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In the subsequent parts of this series, we will delve deeper into customizing signaling channels and explore additional topics such as JMX signaling and notifications.&lt;/p&gt; &lt;/div&gt;</description> <pubDate>Tue, 27 Jun 2023 10:11:11 +0000</pubDate> <link>https://debezium.io/blog/2023/06/27/Debezium-signaling-and-notifications/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/06/27/Debezium-signaling-and-notifications/</guid> </item> <item> <title>Towards Debezium exactly-once delivery</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Every now and then there is a questions in the Debezium &lt;a href=&quot;https://debezium.zulipchat.com/#narrow/stream/302529-users&quot;&gt;chat&lt;/a&gt; or on the &lt;a href=&quot;https://groups.google.com/forum/#!forum/debezium&quot;&gt;mailing list&lt;/a&gt; how to ensure exactly-once delivery of the records produced by Debezium. So far Debezium aimed only for at-least-once delivery. This means Debezium guarantees every single change will be delivered and there is no missing or skipped change event. However, in case of failures, restarts or DB connection drops, the same event can be delivered more than once. Typical scenario is that the event is delivered twice - once before failure/restart and second time after that. Exactly-once delivery (or semantic) provides stronger guarantee - every single message will be delivered and at the same time there won&amp;#8217;t be any duplicates, every single message will be delivered exactly once. So far our answer was that the users have to implement their own deduplication system if they need exactly-once delivery. However, with Kafka Connect support for exactly-once delivery, it seems we can provide exactly-once delivery for Debezium connectors out-of-the-box, only with a little configuration change.&lt;/p&gt; &lt;/div&gt;</description> <pubDate>Thu, 22 Jun 2023 01:20:00 +0000</pubDate> <link>https://debezium.io/blog/2023/06/22/towards-exactly-once-delivery/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/06/22/towards-exactly-once-delivery/</guid> </item> <item> <title>Debezium 2.3.0.Final Released</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The team has been quite busy these last couple months preparing for a condensed release timeline for Debezium 2.3, and I am thrilled to announce that the next installment has arrived, Debezium &lt;strong&gt;2.3.0.Final&lt;/strong&gt; is now available!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Despite a condensed release schedule, this release is packed with tons of new features and improvements. Debezium 2.3 includes a brand-new notification subsystem, a rewrite of the signal subsystem to support additional means to send signals to Debezium connectors, the introduction of the JDBC storage module to maintain Debezium state in relational databases, parallelization of Vitess shard processing, PostgreSQL connector replica identity improvements, a brand-new Debezium Server operator for Kubernetes, support for exactly-once semantics for the PostgreSQL connector, and improvements to the Oracle connector.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Let&amp;#8217;s take a few moments and talk about any breaking changes and all these improvements and why they&amp;#8217;re so important!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#breaking-changes&quot;&gt;Breaking changes&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#new-features&quot;&gt;New features and improvements&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#other-fixes&quot;&gt;Other changes&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#whats-next&quot;&gt;What&amp;#8217;s next&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;You can also find a full list of changes in Debezium 2.3&amp;#8217;s &lt;a href=&quot;https://debezium.io/releases/2.3/release-notes&quot;&gt;release notes&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;breaking-changes&quot;&gt;Breaking changes&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;We generally attempt to avoid as many breaking changes across minor releases as possible, but unfortunately sometimes such changes are inevitable, particularly if a feature may have been introduced as &lt;em&gt;experimental&lt;/em&gt;. Debezium 2.3 introduces two breaking changes depending on whether you are upgrading from a preview release or an earlier stable version:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#postgresql-mysql-secure-connection-changes&quot;&gt;PostgreSQL / MySQL secure connection changes&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#jdbc-storage-encoding-changes&quot;&gt;JDBC storage encoding changes&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;postgresql-mysql-secure-connection-changes&quot;&gt;PostgreSQL / MySQL secure connection changes&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium for PostgreSQL and MySQL can be configured to use a secured SSL connection. For PostgreSQL, this can be done by configuring &lt;a href=&quot;https://debezium.io/documentation/reference/2.3/connectors/postgresql.html#postgresql-property-database-sslmode&quot;&gt;&lt;code&gt;database.sslmode&lt;/code&gt;&lt;/a&gt; while for MySQL this can be done with &lt;a href=&quot;https://debezium.io/documentation/reference/2.3/connectors/mysql.html#mysql-property-database-ssl-mode&quot;&gt;&lt;code&gt;database.ssl.mode&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;With Debezium 2.3, this configuration option no longer defaults to &lt;code&gt;disable&lt;/code&gt; (PostgreSQL) or &lt;code&gt;disabled&lt;/code&gt; (MySQL) but instead defaults to &lt;code&gt;prefer&lt;/code&gt; (PostgreSQL) and &lt;code&gt;preferred&lt;/code&gt; (MySQL). This means that when attempting to connect using an encrypted, secure connection is unavailable, the connector will fallback to using an unsecured connection by default unless configured otherwise.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;jdbc-storage-encoding-changes&quot;&gt;JDBC storage encoding changes&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium 2.3.0.alpha1 introduced the new &lt;em&gt;experimental&lt;/em&gt; JDBC storage module. This storage module defaulted to using UTF-16 as it&amp;#8217;s default encoding; however, most databases prefer UTF-8 as a default. If you are upgrading from Debezium 2.3.0.Alpha1, Debezium 2.3.0.Beta1 and later now use UTF-8 when storing data using the JDBC storage module to align with typical database defaults.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;new-features&quot;&gt;New features and improvements&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium 2.3 includes a plethora of new features improvements, which include the following:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#debezium-server-operator&quot;&gt;Debezium Server Operator for Kubernetes&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#notifications&quot;&gt;New notification subsystem&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#signals&quot;&gt;New extensible signal subsystem with new channels&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#jmx-signals-notifications&quot;&gt;JMX signal and notification integration&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#jdbc-storage&quot;&gt;New JDBC storage module&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#exactly-once-delivery&quot;&gt;Exactly once delivery for PostgreSQL streaming&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#replica-identity&quot;&gt;PostgreSQL replica identity changes&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&quot;#rac-specify-sid&quot;&gt;Oracle RAC improvements&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;debezium-server-operator&quot;&gt;Debezium Server Operator for Kubernetes&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This release introduces a &lt;em&gt;preview&lt;/em&gt; version of the new Debezium Operator, providing the ability to deploy and manage Debezium Server instances within Kubernetes. Debezium Server allows you to stream change events from your data sources to a wide variety of messaging infrastructures. Our goal is to provide a Kafka-less alternative for the Debezium community who wish to utilize Kubernetes for scalability and high availability deployments.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Presently, the documentation is sparse as the operator is in early incubation stages; however, we do intend to improve upon this in upcoming release cycles. You can find a &lt;a href=&quot;https://github.com/debezium/debezium-operator#quickstart-example&quot;&gt;deployment example&lt;/a&gt; and basic description of the &lt;a href=&quot;https://github.com/debezium/debezium-operator#debeziumserverspec-reference&quot;&gt;custom resource specification&lt;/a&gt; in the github repository that you can use as a reference for the short-term.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;We do not recommend a production deployment of this component at this time; however, we encourage users to provide community feedback. The feedback will be valuable in evaluating if the component is feature ready or if there are still areas of improvement to meet everyone&amp;#8217;s needs.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;notifications&quot;&gt;New notification subsystem&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium 2.3 introduces a brand-new feature called notifications, allowing Debezium to emit events that can be consumed by any external system to know the status of various stages of Debezium&amp;#8217;s lifecycle.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Notification events are represented as a series of key/value tuples, with a structure that contains several out-of-the-box fields. The following is an example of a simple notification event.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;title&quot;&gt;Example Notification Event&lt;/div&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;json&quot;&gt;{ &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;c485ccc3-16ff-47cc-b4e8-b56a57c3bad2&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;aggregate_type&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;Snapshot&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;Started&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;additional_data&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: { &lt;span class=&quot;error&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;.&lt;/span&gt; } }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Each notification event consists of an &lt;code&gt;id&lt;/code&gt; field, a UUID to identify the notification, an &lt;code&gt;aggregate_type&lt;/code&gt; field to which the notification is related based on the concept of domain-driven design, a &lt;code&gt;type&lt;/code&gt; field that is mean to given more detail about the aggregate type itself, and an optional &lt;code&gt;additional_data&lt;/code&gt; field which consists of a map of string-based key/value pairs with additional information about the event.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;At this time, there are two notification event types supported by Debezium:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Status of the initial snapshot&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Monitoring of the incremental snapshot&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;sect3&quot;&gt; &lt;h4 id=&quot;initial_snapshot_notifications&quot;&gt;Initial Snapshot Notifications&lt;/h4&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;An initial snapshot is the consistent capture of the existing data when a connector first starts. An initial snapshot event will have an aggregate type with the value of &lt;code&gt;&quot;Initial Snapshot&quot;&lt;/code&gt; and the type of event will consist of one of three logical values:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;dlist&quot;&gt; &lt;dl&gt; &lt;dt class=&quot;hdlist1&quot;&gt;&lt;code&gt;SKIPPED&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Represents the initial snapshot was skipped.&lt;/p&gt; &lt;/dd&gt; &lt;dt class=&quot;hdlist1&quot;&gt;&lt;code&gt;ABORTED&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Represents the initial snapshot was aborted.&lt;/p&gt; &lt;/dd&gt; &lt;dt class=&quot;hdlist1&quot;&gt;&lt;code&gt;COMPLETED&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Represents the initial snapshot has concluded successfully.&lt;/p&gt; &lt;/dd&gt; &lt;/dl&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The following is an example of a notification about the completion of the initial snapshot:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;title&quot;&gt;Example snapshot completed event&lt;/div&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;json&quot;&gt;{ &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;5563ae14-49f8-4579-9641-c1bbc2d76f99&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;aggregate_type&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;Initial Snapshot&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;COMPLETED&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect3&quot;&gt; &lt;h4 id=&quot;incremental_snapshot_notifications&quot;&gt;Incremental Snapshot Notifications&lt;/h4&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;An incremental snapshot is a capture of the existing data from a configured set of tables while the connector is actively streaming changes. An incremental snapshot event will have an aggregate type with the value of &lt;code&gt;&quot;Incremental Snapshot&quot;&lt;/code&gt; and the type will consist of one of several logical values:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;dlist&quot;&gt; &lt;dl&gt; &lt;dt class=&quot;hdlist1&quot;&gt;&lt;code&gt;STARTED&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Indicates an incremental snapshot has started.&lt;/p&gt; &lt;/dd&gt; &lt;dt class=&quot;hdlist1&quot;&gt;&lt;code&gt;PAUSED&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Indicates an incremental snapshot has been temporarily paused.&lt;/p&gt; &lt;/dd&gt; &lt;dt class=&quot;hdlist1&quot;&gt;&lt;code&gt;RESUMED&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Indicates an incremental snapshot that had been paused has now resumed.&lt;/p&gt; &lt;/dd&gt; &lt;dt class=&quot;hdlist1&quot;&gt;&lt;code&gt;STOPPED&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Indicates an incremental snapshot has stopped.&lt;/p&gt; &lt;/dd&gt; &lt;dt class=&quot;hdlist1&quot;&gt;&lt;code&gt;IN_PROGRESS&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Indicates an incremental snapshot is in-progress.&lt;/p&gt; &lt;/dd&gt; &lt;dt class=&quot;hdlist1&quot;&gt;&lt;code&gt;TABLE_SCAN_COMPLETED&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Indicates an incremental snapshot has concluded for a given table.&lt;/p&gt; &lt;/dd&gt; &lt;dt class=&quot;hdlist1&quot;&gt;&lt;code&gt;COMPLETED&lt;/code&gt;&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Indicates that an incremental snapshot has concluded for all tables.&lt;/p&gt; &lt;/dd&gt; &lt;/dl&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect3&quot;&gt; &lt;h4 id=&quot;configuring_notifications&quot;&gt;Configuring Notifications&lt;/h4&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium notifications are configured via the connector&amp;#8217;s configuration. The following examples show how to configure the out-of-the-box Kafka Topic or Log based channels.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;title&quot;&gt;Using a Kafka Topic&lt;/div&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;json&quot;&gt;{ &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;notification.enable.channels&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;sink&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;notification.sink.topic.name&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;debezium_notifications&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;error&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;.&lt;/span&gt; }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;title&quot;&gt;Using the connector logs&lt;/div&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;json&quot;&gt;{ &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;notification.enable.channels&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;signals&quot;&gt;New extensible signal subsystem&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium has supported the concept of a signal since the introduction of the Incremental Snapshot feature well back in Debezium 1.x. Signals are important as it allows you to provide metadata to instruct Debezium to perform a given task, whether that task is to write an entry to the connector log or perform an ad-hoc incremental snapshot.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In Debezium 2.3, the signal subsystem was reworked to introduce the concept called &lt;em&gt;channel&lt;/em&gt;, which represents a medium for which Debezium watches or listens and reacts to signals. In previous versions, there was one channel supported universally across connectors, which was the database signal table. In this release, these channels have been unified and the following are available out of the box:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Database signal table&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Kafka signal topic&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Filesystem&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;JMX&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;But that&amp;#8217;s not all, the signal channel contract is extensible, allowing you to write a custom implementation and make that available to your connectors with ease.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;jmx-signals-notifications&quot;&gt;JMX signals and notifications integration&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium 2.3 previously introduced both a new signal channel and notification feature. This feature allows external applications to easily integrate with Debezium, sending signals to perform various tasks such as ad-hoc incremental snapshots, and to receive notifications about the progress of such tasks. This release builds on top of that functionality to allow the ability to send signals and receive notifications via JMX.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;sect3&quot;&gt; &lt;h4 id=&quot;sending_signals&quot;&gt;Sending signals&lt;/h4&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In this release, the signal channel subsystem has been improved to support sending signals via JMX. From the &lt;code&gt;jconsole&lt;/code&gt; window, you can now see there are two new subsections for a connector, a notifications and signal section shown below:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;exampleblock imageblock centered-image&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;img src=&quot;/assets/images/jconsole-signal-notifications.png&quot; class=&quot;responsive-image&quot; alt=&quot;JConsole JMX metrics&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The new &lt;code&gt;signals&lt;/code&gt; section allows you to invoke an operation on the JMX bean in order to transmit a signal to Debezium. This signal resembles the logical signal table structure where it accepts 3 parameters, a unique identifier, the signal type, and finally the signal payload. The following illustrates what this looks like from &lt;code&gt;jconsole&lt;/code&gt;:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;exampleblock imageblock centered-image&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;img src=&quot;/assets/images/jconsole-send-signal.png&quot; class=&quot;responsive-image&quot; alt=&quot;JConsole Sending Signals&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect3&quot;&gt; &lt;h4 id=&quot;receiving_notifications&quot;&gt;Receiving notifications&lt;/h4&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The new &lt;code&gt;notifications&lt;/code&gt; section allows you to receive and react to notifications captured by the JMX bean from Debezium. The Debezium JMX bean will buffer all notifications to ensure that no notification is missed. The following illustrates what this looks like from &lt;code&gt;jconsole&lt;/code&gt;:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;exampleblock imageblock centered-image&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;img src=&quot;/assets/images/jconsole-receive-notification.png&quot; class=&quot;responsive-image&quot; alt=&quot;JConsole Receive Notifications&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;admonitionblock note&quot;&gt; &lt;table&gt; &lt;tr&gt; &lt;td class=&quot;icon&quot;&gt; &lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt; &lt;/td&gt; &lt;td class=&quot;content&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The JMX bean does not automatically clear the notification queue. In order to avoid memory concerns, be sure to invoke the &lt;code&gt;reset&lt;/code&gt; method on the notifications bean once you&amp;#8217;ve processed all notifications.&lt;/p&gt; &lt;/div&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;We look forward to your feedback on this new way to integrate signals and notifications with Debezium over JMX.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;jdbc-storage&quot;&gt;New JDBC storage subsystem&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium 2.3 introduces a new storage module implementation supporting the persistence of schema history and offset data in a datastore via JDBC. For environments where you may not have easy access to persistent filesystems, this offers yet another alternative for storage via a remote, persistent storage platform.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In order to take advantage of this new module, the following dependency must be added to your project or application:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;title&quot;&gt;Maven coordinates&lt;/div&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.debezium&lt;span class=&quot;tag&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;debezium-storage-jdbc&lt;span class=&quot;tag&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.3.0.Final&lt;span class=&quot;tag&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The following examples show how to configure Offset or Schema History storage via the JDBC storage module:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;title&quot;&gt;Configuration example for Offset JDBC storage&lt;/div&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;json&quot;&gt;{ &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;offset.storage.jdbc.url&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;&amp;lt;jdbc-connection-url&amp;gt;&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;offset.storage.jdbc.user&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;dbuser&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;offset.storage.jdbc.password&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;secret&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;offset.storage.jdbc.offset_table_name&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;debezium_offset_storage&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;title&quot;&gt;Configuration example for Schema History JDBC storage&lt;/div&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;json&quot;&gt;{ &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;schema.history.internal.jdbc.url&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;&amp;lt;jdbc-connection-url&amp;gt;&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;schema.history.internal.jdbc.user&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;dbuser&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;schema.history.internal.jdbc.password&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;secret&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;schema.history.internal.jdbc.schema.history.table.name&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;debezium_database_history&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;exactly-once-delivery&quot;&gt;Exactly once delivery for PostgreSQL streaming&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium has traditionally been an at-least-once delivery solution, guaranteeing that no change is ever missed. Exactly-Once is a proposal by the Apache Kafka community as a part of &lt;a href=&quot;https://cwiki.apache.org/confluence/display/KAFKA/KIP-618%3A+Exactly-Once+Support+for+Source+Connectors&quot;&gt;KIP-618&lt;/a&gt;. This proposal aims to address a common problem with producers (source connectors) when a producer retries, it may re-send a batch of events to the Kafka broker even if that batch had already been committed by the broker. This means there are situations where duplicate events may be sent and not every consumer (sink connector) may be capable of handling such situations easily.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium plans to roll out exactly-once delivery semantics in a phased style. There are specific corner cases around snapshotting and streaming and these can vary by connector. And with that, Debezium 2.3 starts out by specifically only adding support for exactly-once semantics for the PostgreSQL during its &lt;em&gt;streaming phase&lt;/em&gt; only!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In order to take advantage of exactly-once delivery, there is no connector configuration changes required; however, your Kafka Connect worker configuration will need to be adjusted to enable this feature. You can find a reference to the new configuration properties in &lt;a href=&quot;https://cwiki.apache.org/confluence/display/KAFKA/KIP-618%3A+Exactly-Once+Support+for+Source+Connectors#KIP618:ExactlyOnceSupportforSourceConnectors-Newproperties&quot;&gt;KIP-618&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;admonitionblock note&quot;&gt; &lt;table&gt; &lt;tr&gt; &lt;td class=&quot;icon&quot;&gt; &lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt; &lt;/td&gt; &lt;td class=&quot;content&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;If you are mixing connectors on the same connect cluster that do and do not support exactly once delivery, you will not be able to set &lt;code&gt;exactly.once.support&lt;/code&gt; in the worker configuration to &lt;code&gt;required&lt;/code&gt; as this will cause connectors that do not support this feature to fail validation at start-up.&lt;/p&gt; &lt;/div&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;replica-identity&quot;&gt;PostgreSQL replica identity changes&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium 2.3 introduces a new PostgreSQL connector feature called &quot;Autoset Replica Identity&quot;.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Replica identity is PostgreSQL&amp;#8217;s way to identify what columns are captured in the database transaction logs for inserts, updates, and deletes. This new feature allows configuring a table&amp;#8217;s replica identity via connector configuration and delegating the responsibility of setting this configuration to the connector at start-up.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The new configuration option, &lt;code&gt;replica.identity.autoset.values&lt;/code&gt;, specifies a comma-separated list of table and replica identity tuples. If the table already has a given replica identity, the identity will be overwritten to match what is specified in this configuration if the table is included. PostgreSQL supports several replica identity types, more information on these can be found in the &lt;a href=&quot;https://debezium.io/documentation/reference/2.3/connectors/postgresql.html#postgresql-replica-identity&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;When specifying the &lt;code&gt;replica.identity.autoset.values&lt;/code&gt;, the value is a comma-separated list of values where each element uses the format of &lt;code&gt;&amp;lt;fully-qualified-table-name&amp;gt;:&amp;lt;replica-identity&amp;gt;&lt;/code&gt;. An example is shown below where two tables are configured to have full replica identity:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;json&quot;&gt;{ &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;replica.identity.autoset.values&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;public.table1:FULL,public.table2:FULL&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect2&quot;&gt; &lt;h3 id=&quot;rac-specify-sid&quot;&gt;Oracle RAC improvements&lt;/h3&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;When connecting to an Oracle RAC installation, you must specify a &lt;code&gt;rac.nodes&lt;/code&gt; configuration property with a minimum of the host or IP address of all individual nodes across the cluster. Older versions of the connector also supported a varied format, allowing the inclusion of a port for each node as not every node on the cluster may use the same port.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium 2.3 improves the Oracle RAC support by also acknowledging that each node may not necessarily use the same Oracle Site Identifier (SID), and therefore, the SID can also now be included in the &lt;code&gt;rac.nodes&lt;/code&gt; configuration property to support such installations.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The following example illustrates connecting to two Oracle RAC nodes, each using different ports and SID parameters:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;listingblock&quot;&gt; &lt;div class=&quot;title&quot;&gt;An example configuration&lt;/div&gt; &lt;div class=&quot;content&quot;&gt; &lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;json&quot;&gt;{ &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;connector.class&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;io.debezium.connector.oracle.OracleConnector&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;key&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;rac.nodes&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;host1.domain.com:1521/ORCLSID1,host2.domain.com:1522/ORCLSID2&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;error&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;.&lt;/span&gt; }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;other-fixes&quot;&gt;Other fixes&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;There were quite a number of bugfixes and stability changes in this release, some noteworthy are:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Debezium Server stops sending events to Google Cloud Pub/Sub &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-5175&quot;&gt;DBZ-5175&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Toasted varying character array and date array are not correcly processed &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6122&quot;&gt;DBZ-6122&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Upgrade to Infinispan 14.0.11.Final to fix CVE-2022-45047 &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6193&quot;&gt;DBZ-6193&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Introduce LogMiner query filtering modes &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6254&quot;&gt;DBZ-6254&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Lock contention on LOG_MINING_FLUSH table when multiple connectors deployed &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6256&quot;&gt;DBZ-6256&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Ensure that the connector can start from a stale timestamp more than one hour into the past &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6307&quot;&gt;DBZ-6307&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The rs_id field is null in Oracle change event source information block &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6329&quot;&gt;DBZ-6329&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Add JWT authentication to HTTP Client &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6348&quot;&gt;DBZ-6348&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Using pg_replication_slot_advance which is not supported by PostgreSQL10. &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6353&quot;&gt;DBZ-6353&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;log.mining.transaction.retention.hours should reference last offset and not sysdate &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6355&quot;&gt;DBZ-6355&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Support multiple tasks when streaming shard list &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6365&quot;&gt;DBZ-6365&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Code Improvements for skip.messages.without.change &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6366&quot;&gt;DBZ-6366&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Kinesis Sink - AWS Credentials Provider &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6372&quot;&gt;DBZ-6372&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Toasted hstore are not correctly processed &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6379&quot;&gt;DBZ-6379&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Oracle DDL shrink space for table partition can not be parsed &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6386&quot;&gt;DBZ-6386&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;__source_ts_ms r (read) operation date is set to future for SQL Server &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6388&quot;&gt;DBZ-6388&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;PostgreSQL connector task fails to resume streaming because replication slot is active &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6396&quot;&gt;DBZ-6396&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Date and Time values without timezones are not persisted correctly based on database.time_zone &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6399&quot;&gt;DBZ-6399&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;MongoDB connector crashes on invalid resume token &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6402&quot;&gt;DBZ-6402&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Snapshot step 5 - Reading structure of captured tables time too long &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6439&quot;&gt;DBZ-6439&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;NPE on read-only MySQL connector start up &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6440&quot;&gt;DBZ-6440&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Oracle parallel snapshots do not properly set PDB context when using multitenancy &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6457&quot;&gt;DBZ-6457&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[MariaDB] Add support for userstat plugin keywords &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6459&quot;&gt;DBZ-6459&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Debezium Server cannot recover from Google Pub/Sub errors &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6461&quot;&gt;DBZ-6461&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&quot;Ignoring invalid task provided offset&quot; &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6463&quot;&gt;DBZ-6463&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Oracle snapshot.include.collection.list should be prefixed with databaseName in documentation. &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6474&quot;&gt;DBZ-6474&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Db2 connector can fail with NPE on notification sending &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6485&quot;&gt;DBZ-6485&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;ExtractNewRecordState SMT in combination with HeaderToValue SMT results in Unexpected field name exception &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6486&quot;&gt;DBZ-6486&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;BigDecimal fails when queue memory size limit is in place &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6490&quot;&gt;DBZ-6490&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Allow schema to be specified in the Debezium Sink Connector configuration &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6491&quot;&gt;DBZ-6491&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;ORACLE table can not be captured, got runtime.NoViableAltException &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6492&quot;&gt;DBZ-6492&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Signal poll interval has incorrect default value &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6496&quot;&gt;DBZ-6496&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Oracle JDBC driver 23.x throws ORA-18716 - not in any time zone &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6502&quot;&gt;DBZ-6502&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Alpine postgres images should use llvm/clang 15 explicitly &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6506&quot;&gt;DBZ-6506&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;FileSignalChannel is not loaded &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6509&quot;&gt;DBZ-6509&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Utilize event.processing.failure.handling.mode in Vitess replication connection &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6510&quot;&gt;DBZ-6510&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;MySqlReadOnlyIncrementalSnapshotChangeEventSource enforces Kafka dependency during initialization &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6511&quot;&gt;DBZ-6511&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Debezium incremental snapshot chunk size documentation unclear or incorrect &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6512&quot;&gt;DBZ-6512&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Error value of negative seconds in convertOracleIntervalDaySecond &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6513&quot;&gt;DBZ-6513&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Debezium incremental snapshot chunk size documentation unclear or incorrect &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6515&quot;&gt;DBZ-6515&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Only use error processing mode on certain errors &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6523&quot;&gt;DBZ-6523&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[PostgreSQL] LTree data is not being captured by streaming &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6524&quot;&gt;DBZ-6524&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Oracle Connector: Snapshot fails with specific combination &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6528&quot;&gt;DBZ-6528&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Use better hashing function for PartitionRouting &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6529&quot;&gt;DBZ-6529&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Table order is incorrect on snapshots &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6533&quot;&gt;DBZ-6533&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Start publishing nightly images for Debezium Operator &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6541&quot;&gt;DBZ-6541&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Start releasing images for Debezium Operator &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6542&quot;&gt;DBZ-6542&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Unhandled NullPointerException in PartitionRouting will crash the whole connect plugin &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6543&quot;&gt;DBZ-6543&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Bug in field.name.adjustment.mode Property &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6559&quot;&gt;DBZ-6559&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Operator sets incorrect value of transformation.predicate when no predicate is specified &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6560&quot;&gt;DBZ-6560&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Upgrade MySQL JDBC driver to 8.0.33 &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6563&quot;&gt;DBZ-6563&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Upgrade Google Cloud BOM to 26.17.0 &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6570&quot;&gt;DBZ-6570&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Kubernetes-Config extension interferes with SSL tests due to k8 devservice starting up &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6574&quot;&gt;DBZ-6574&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;MySQL read-only connector with Kafka signals enabled fails on start up &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6579&quot;&gt;DBZ-6579&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Redis schema history can fail upon startup &lt;a href=&quot;https://issues.redhat.com/browse/DBZ-6580&quot;&gt;DBZ-6580&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Altogether, &lt;a href=&quot;https://issues.redhat.com/issues/?jql=project%20%3D%20DBZ%20AND%20fixVersion%20in%20(2.3.0.Alpha1%2C%202.3.0.Beta1%2C%202.3.0.CR1%2C%202.3.0.Final)%20ORDER%20BY%20component%20ASC&quot;&gt;138 issues&lt;/a&gt; were fixed for this release. A big thank you to all the contributors from the community who worked on this release: &lt;a href=&quot;https://github.com/isacandrei&quot;&gt;Andrei Isac&lt;/a&gt;, &lt;a href=&quot;https://github.com/angsdey2&quot;&gt;Angshuman Dey&lt;/a&gt;, &lt;a href=&quot;https://github.com/adasari&quot;&gt;Anil Dasari&lt;/a&gt;, &lt;a href=&quot;https://github.com/ani-sha&quot;&gt;Anisha Mohanty&lt;/a&gt;, &lt;a href=&quot;https://github.com/bpaquet&quot;&gt;Bertrand Paquet&lt;/a&gt;, &lt;a href=&quot;https://github.com/roldanbob&quot;&gt;Bob Roldan&lt;/a&gt;, &lt;a href=&quot;https://github.com/brenoavm&quot;&gt;Breno Moreira&lt;/a&gt;, &lt;a href=&quot;https://github.com/Naros&quot;&gt;Chris Cranford&lt;/a&gt;, &lt;a href=&quot;https://github.com/cjmencias&quot;&gt;Christian Jacob Mencias&lt;/a&gt;, &lt;a href=&quot;https://github.com/TechIsCool&quot;&gt;David Beck&lt;/a&gt;, &lt;a href=&quot;https://github.com/fredlegaucher&quot;&gt;Frederic Laurent&lt;/a&gt;, &lt;a href=&quot;https://github.com/ddsr-ops&quot;&gt;Gong Chang Hua&lt;/a&gt;, &lt;a href=&quot;https://github.com/harveyyue&quot;&gt;Harvey Yue&lt;/a&gt;, &lt;a href=&quot;https://github.com/Hidetomi&quot;&gt;Hidetomi Umaki&lt;/a&gt;, &lt;a href=&quot;https://github.com/uidoyen&quot;&gt;Hussain Ansari&lt;/a&gt;, &lt;a href=&quot;https://github.com/indraraj&quot;&gt;Indra Shukla&lt;/a&gt;, &lt;a href=&quot;https://github.com/ismailsimsek&quot;&gt;Ismail Simsek&lt;/a&gt;, &lt;a href=&quot;https://github.com/jcechace&quot;&gt;Jakub Cechacek&lt;/a&gt;, &lt;a href=&quot;https://github.com/jehrenzweig-pi&quot;&gt;Jesse Ehrenzweig&lt;/a&gt;, &lt;a href=&quot;https://github.com/jpechane&quot;&gt;Jiri Pechanec&lt;/a&gt;, &lt;a href=&quot;https://github.com/joschi&quot;&gt;Jochen Schalanda&lt;/a&gt;, &lt;a href=&quot;https://github.com/subkanthi&quot;&gt;Kanthi Subramanian&lt;/a&gt;, &lt;a href=&quot;https://github.com/kgalieva&quot;&gt;Katerina Galieva&lt;/a&gt;, &lt;a href=&quot;https://github.com/mfvitale&quot;&gt;Mario Fiore Vitale&lt;/a&gt;, &lt;a href=&quot;https://github.com/MartinMedek&quot;&gt;Martin Medek&lt;/a&gt;, &lt;a href=&quot;https://github.com/miguelbirdie&quot;&gt;Miguel Angel Sotomayor&lt;/a&gt;, &lt;a href=&quot;https://github.com/nancyxu123&quot;&gt;Nancy Xu&lt;/a&gt;, &lt;a href=&quot;https://github.com/nirolevy&quot;&gt;Nir Levy&lt;/a&gt;, &lt;a href=&quot;https://github.com/obabec&quot;&gt;Ondrej Babec&lt;/a&gt;, &lt;a href=&quot;https://github.com/zalmane&quot;&gt;Oren Elias&lt;/a&gt;, &lt;a href=&quot;https://github.com/rnowling-memphis&quot;&gt;RJ Nowling&lt;/a&gt;, &lt;a href=&quot;https://github.com/rk3rn3r&quot;&gt;René Kerner&lt;/a&gt;, &lt;a href=&quot;https://github.com/roldanbob&quot;&gt;Robert Roldan&lt;/a&gt;, &lt;a href=&quot;https://github.com/ironakj&quot;&gt;Ronak Jain&lt;/a&gt;, &lt;a href=&quot;https://github.com/eizners&quot;&gt;Sergey Eizner&lt;/a&gt;, &lt;a href=&quot;https://github.com/ShuranZhang&quot;&gt;Shuran Zhang&lt;/a&gt;, &lt;a href=&quot;https://github.com/sclarkson-zoomcare&quot;&gt;Stephen Clarkson&lt;/a&gt;, &lt;a href=&quot;https://github.com/twthorn&quot;&gt;Thomas Thornton&lt;/a&gt;, &lt;a href=&quot;https://github.com/tommyk-gears&quot;&gt;Tommy Karlsson&lt;/a&gt;, &lt;a href=&quot;https://github.com/imtj1&quot;&gt;Tony Joseph&lt;/a&gt;, &lt;a href=&quot;https://github.com/vjuranek&quot;&gt;Vojtech Juranek&lt;/a&gt;, and &lt;a href=&quot;https://github.com/caicancai&quot;&gt;蔡灿材&lt;/a&gt;!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;sect1&quot;&gt; &lt;h2 id=&quot;whats_next&quot;&gt;What&amp;#8217;s next?&lt;/h2&gt; &lt;div class=&quot;sectionbody&quot;&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;With Debezium 2.3 out, our major focus will be coordinating bugfixes to any reports for Debezium 2.3, but primarily on the upcoming new preview release for Debezium 2.4.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Debezium 2.4 is planned with a ton of changes, and we intend to tackle these changes in a bucketed fashion, with each bucket being assigned a priority. As with any schedule, priorities are subject to change but the following is an outline of what to expect:&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;dlist&quot;&gt; &lt;dl&gt; &lt;dt class=&quot;hdlist1&quot;&gt;Priority 1&lt;/dt&gt; &lt;dd&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;[Core] TimescaleDB single message transformation support&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[Core] Timezone single message transformation to ease usages with Debezium temporal types&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[Core] Initial snapshot notifications&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[MongoDB] Database-wide change stream support&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[MongoDB] Multi-task deployment metrics support&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[Oracle] OpenLogReplicator adapter support&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[Oracle] XML, LONG, RAW, and LONG RAW data type support&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[Universal] Exactly-Once semantics support for other connectors&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[Dependencies] Apache Kafka 3.5.x support&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/dd&gt; &lt;dt class=&quot;hdlist1&quot;&gt;Priority 2&lt;/dt&gt; &lt;dd&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;[Operator] Next steps for Debezium operator&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[Core] Ad-hoc blocking snapshot&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[Dependencies] Use OpenTelemetry&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/dd&gt; &lt;dt class=&quot;hdlist1&quot;&gt;Priority 3&lt;/dt&gt; &lt;dd&gt; &lt;div class=&quot;ulist&quot;&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;[Embedded Engine] Parallelization support&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[MongoDB] Parallel incremental snapshots support&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;[MySQL] Parallel schema snapshots support&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/dd&gt; &lt;/dl&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This is not an exhaustive list and its quite ambitious, but given the shortened time with Debezium 2.3, we hope the extra few weeks on Debezium 2.4 will make this next minor release possible with all these features and much more. The roadmap will be updated this week to align with the above for Debezium 2.4 and the future, so please be sure to get in touch with us on the &lt;a href=&quot;https://groups.google.com/g/debezium&quot;&gt;mailing list&lt;/a&gt; or our &lt;a href=&quot;https://debezium.zulipchat.com/login/#narrow/stream/302529-users&quot;&gt;chat&lt;/a&gt; if you have any ideas or suggestions.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Otherwise, I expect with summer in full swing for those of us in the north, holidays and much-deserved time-off will be normal for the next several months. To those who travel or intend to take some time for yourselves and family, enjoy and be safe!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Until next time&amp;#8230;&amp;#8203;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;</description> <pubDate>Wed, 21 Jun 2023 00:00:00 +0000</pubDate> <link>https://debezium.io/blog/2023/06/21/debezium-2-3-final-released/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/06/21/debezium-2-3-final-released/</guid> </item> <item> <title>Debezium 2.3.0.CR1 Released</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;It is my pleasure to announce the next Debezium 2.3 release, &lt;strong&gt;2.3.0.CR1&lt;/strong&gt;!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The main focus of this release is to stabilize the Debezium 2.3 release in preparation for a final release in the coming weeks, which typically means we&amp;#8217;re focusing on bugfixes; however, this release includes two new features. Lets take a moment and dive into these new features and any bug fixes that are noteworthy!&lt;/p&gt; &lt;/div&gt;</description> <pubDate>Mon, 12 Jun 2023 00:00:00 +0000</pubDate> <link>https://debezium.io/blog/2023/06/12/debezium-2-3-cr1-released/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/06/12/debezium-2-3-cr1-released/</guid> </item> <item> <title>Debezium 2.3.0.Beta1 Released</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;It&amp;#8217;s my pleasure to announce the next release of the Debezium 2.3 series, &lt;strong&gt;2.3.0.Beta1&lt;/strong&gt;!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;While this release focuses primarily on bug fixes and stability improvements, there are some new improvements with the PostgreSQL connector and the new notification and channels subsystem. In addition, there are also some compatibility breaking changes.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This release contains changes for &lt;a href=&quot;https://issues.redhat.com/issues/?jql=project%20%3D%20DBZ%20AND%20fixVersion%20%3D%202.3.0.Beta1%20ORDER%20BY%20issuetype%20DESC&quot;&gt;22 issues&lt;/a&gt;, so lets take a moment and dive into the new features and any potential bug fixes or breaking changes that are noteworthy!&lt;/p&gt; &lt;/div&gt;</description> <pubDate>Mon, 29 May 2023 00:00:00 +0000</pubDate> <link>https://debezium.io/blog/2023/05/29/debezium-2-3-beta1-released/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/05/29/debezium-2-3-beta1-released/</guid> </item> <item> <title>Debezium 2.3.0.Alpha1 Released</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;It&amp;#8217;s my pleasure to announce the first release of the Debezium 2.3 series, &lt;strong&gt;2.3.0.Alpha1&lt;/strong&gt;!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This release brings many new and exciting features as well as bug fixes, including Debezium status notifications, storage of Debezium state into a JDBC data store, configurable signaling channels, the ability to edit connector configurations via Debezium UI, the parallelization of Vitess shards processing, and much more.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This release contains changes for &lt;a href=&quot;https://issues.redhat.com/issues/?jql=project%20%3D%20DBZ%20AND%20fixVersion%20%3D%202.3.0.Alpha1%20ORDER%20BY%20issuetype%20DESC&quot;&gt;59 issues&lt;/a&gt;, so lets take a moment and dive into several of these new features and any potential bug fixes or breaking changes that are noteworthy!&lt;/p&gt; &lt;/div&gt;</description> <pubDate>Mon, 15 May 2023 00:00:00 +0000</pubDate> <link>https://debezium.io/blog/2023/05/15/debezium-2-3-alpha1-released/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/05/15/debezium-2-3-alpha1-released/</guid> </item> <item> <title>Image classification with Debezium and TensorFlow</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;With the recent success of ChatGPT, we can observe another wave of interest in the AI field and machine learning in general. The previous wave of interest in this field was, at least to a certain extent, caused by the fact that excellent ML frameworks like &lt;a href=&quot;https://www.tensorflow.org/&quot;&gt;TensorFlow&lt;/a&gt;, &lt;a href=&quot;https://pytorch.org/&quot;&gt;PyTorch&lt;/a&gt; or general data processing frameworks like &lt;a href=&quot;https://spark.apache.org/&quot;&gt;Spark&lt;/a&gt; became available and made the writing of ML models much more straightforward. Since that time, these frameworks have matured, and writing models are even more accessible, as you will see later in this blog. However, data set preparation and gathering data from various sources can sometimes take time and effort. Creating a complete pipeline that would pull existing or newly created data, adjust it, and ingest it into selected ML libraries can be challenging. Let&amp;#8217;s investigate if Debezium can help with this task and explore how we can leverage Debezium&amp;#8217;s capabilities to make it easier.&lt;/p&gt; &lt;/div&gt;</description> <pubDate>Tue, 02 May 2023 11:20:00 +0000</pubDate> <link>https://debezium.io/blog/2023/05/02/tensorflow-mnist-classification/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/05/02/tensorflow-mnist-classification/</guid> </item> <item> <title>New Debezium images will be available only Quay.io in the future</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;As you may have noticed, the Docker company recently announced a reduction of the free organization accounts offering. The Docker company wanted to provide for free organization accounts only for &lt;a href=&quot;https://www.docker.com/community/open-source/application/&quot;&gt;Docker-Sponsored Open Source (DSOS) projects&lt;/a&gt;. Debezium project doesn&amp;#8217;t meet their definition of open source project as we have a pathway to commercialization. As the accounts ought to be terminated in 30 days, we immediately started to work on moving out the Debezium project from Docker Hub.&lt;/p&gt; &lt;/div&gt;</description> <pubDate>Tue, 25 Apr 2023 10:11:11 +0000</pubDate> <link>https://debezium.io/blog/2023/04/25/container-images-quayio/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/04/25/container-images-quayio/</guid> </item> <item> <title>Debezium 2.2.0.Final Released</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Today, it&amp;#8217;s with great joy that we can announce the availability of Debezium &lt;strong&gt;2.2.0.Final&lt;/strong&gt;!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Many of you may have noticed, this release cadence took a bit longer than our traditional three-months. While we normally prefer to keep to our usual cadence, this shift gives us a unique opportunity to ship Debezium 2.2 with tons of new features and bug fixes, but also major upgrades to several core components.&lt;/p&gt; &lt;/div&gt;</description> <pubDate>Thu, 20 Apr 2023 00:00:00 +0000</pubDate> <link>https://debezium.io/blog/2023/04/20/debezium-2-2-final-released/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/04/20/debezium-2-2-final-released/</guid> </item> <item> <title>Debezium 2.2.0.CR1 Released</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The Debezium team is excited to announce the first release candidate of Deebzium 2.2, Debezium &lt;strong&gt;2.2.0.CR1&lt;/strong&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This release primarily focuses on stability improvements and bug fixes; however, there are a number of new features and breaking changes. In this release, Debezium migrated to Quarkus 3.0.0.Final, there are performance improvements to Debezium Server Pulsar sink, Jolokia can be enabled inside Debezium&amp;#8217;s Kafka Connect container image, incubating support for incremental snapshots on MongoDB multi-replica and sharded clusters, and the deprecation usage of Docker Hub for images.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Let&amp;#8217;s take a moment and dive into several of these and what it means moving forward!&lt;/p&gt; &lt;/div&gt;</description> <pubDate>Mon, 17 Apr 2023 00:00:00 +0000</pubDate> <link>https://debezium.io/blog/2023/04/17/debezium-2-2-cr1-released/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/04/17/debezium-2-2-cr1-released/</guid> </item> <item> <title>Debezium 2.2.0.Beta1 Released</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;The team is excited to announce the first beta release of the Debezium 2.2 release stream, Debezium &lt;strong&gt;2.2.0.Beta1&lt;/strong&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This release includes a plethora of bug fixes, improvements, and a number of new features including, but not limited to, a new JDBC sink connector implementation, MongoDB sharded cluster improvements, Google Spanner PostgreSQL dialect support, and a RabbitMQ sink implementation for Debezium Server to just name a few.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Let&amp;#8217;s take moment and dive into what&amp;#8217;s new!&lt;/p&gt; &lt;/div&gt;</description> <pubDate>Mon, 03 Apr 2023 00:00:00 +0000</pubDate> <link>https://debezium.io/blog/2023/04/03/debezium-2-2-beta1-released/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/04/03/debezium-2-2-beta1-released/</guid> </item> <item> <title>Hello Debezium Team!</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Hi everyone, my name is Mario Fiore Vitale and I recently joined Red Hat and the Debezium team.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;I am a very curious person that follows a continuous learning approach, I like to keep growing my skills. I care about code quality and readability.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;I have about 9+ years of experience and have worked for consultancy, startup, and enterprise product companies in different sectors. In my previously experience I had the chance to work on architecture re-design project to split a monolith into a microservices application. During this experience I gained experience with different technologies such as Kafka, Elasticsearch, Redis, Kubernetes, VictoriaMetrics, Spring Framework, and a bit of Cassandra.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Why Am I here?&lt;/p&gt; &lt;/div&gt;</description> <pubDate>Thu, 09 Mar 2023 10:11:11 +0000</pubDate> <link>https://debezium.io/blog/2023/03/09/hello-debezium/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/03/09/hello-debezium/</guid> </item> <item> <title>Debezium 2.2.0.Alpha3 Released</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Today, I am pleased to announce the third alpha release in the 2.2 release stream, Debezium &lt;strong&gt;2.2.0.Alpha3&lt;/strong&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;This release includes a plethora of bug fixes, improvements, breaking changes, and a number of new features including, but not limited to, optional parallel snapshots, server-side MongoDB change stream filtering, surrogate keys for incremental snapshots, a new Cassandra connector for Cassandra Enterprise, much more.&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Let&amp;#8217;s take moment and dive into some of these new features, improvements, and breaking changes.&lt;/p&gt; &lt;/div&gt;</description> <pubDate>Wed, 08 Mar 2023 00:00:00 +0000</pubDate> <link>https://debezium.io/blog/2023/03/08/debezium-2-2-alpha3-released/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/03/08/debezium-2-2-alpha3-released/</guid> </item> <item> <title>Debezium 2.2.0.Alpha2 Released</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;Today, I am pleased to announce the second alpha release in the 2.2 release stream, Debezium &lt;strong&gt;2.2.0.Alpha2&lt;/strong&gt;. This release includes a plethora of bug fixes, improvements, breaking changes, and a number of new features including, but not limited to, a new &lt;code&gt;ExtractRecordChanges&lt;/code&gt; single message transformation, a Reactive-based implementation of the Debezium Outbox extension for Quarkus, a Debezium Storage module for Apache RocketMQ, and much more. Let&amp;#8217;s take moment and dive into these new features, improvements, and breaking changes.&lt;/p&gt; &lt;/div&gt;</description> <pubDate>Thu, 16 Feb 2023 00:00:00 +0000</pubDate> <link>https://debezium.io/blog/2023/02/16/debezium-2-2-alpha2-released/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/02/16/debezium-2-2-alpha2-released/</guid> </item> <item> <title>DDD Aggregates via CDC-CQRS Pipeline using Kafka &amp; Debezium</title> <description>&lt;div class=&quot;paragraph&quot;&gt; &lt;p&gt;In this post, we are going to talk about a CDC-CQRS pipeline between a normalized relational database, MySQL, as the command database and a de-normalized NoSQL database, MongoDB, as the query database resulting in the creation of DDD Aggregates via Debezium &amp;amp; Kafka-Streams.&lt;/p&gt; &lt;/div&gt;</description> <pubDate>Sat, 04 Feb 2023 00:00:00 +0000</pubDate> <link>https://debezium.io/blog/2023/02/04/ddd-aggregates-via-cdc-cqrs-pipeline-using-kafka-and-debezium/</link> <guid isPermaLink="true">https://debezium.io/blog/2023/02/04/ddd-aggregates-via-cdc-cqrs-pipeline-using-kafka-and-debezium/</guid> </item> </channel> </rss>